{"componentChunkName":"component---src-pages-blog-index-js","path":"/blog/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"Container With Most Water | Leetcode solution in JavaScript","description":"Solution for `Container With Most Water` using Brute Force and Two Pointer","slug":"/leetcode/container-with-most-water","date":"2021-12-05T00:00:00.000Z","tags":["Leetcode"],"draft":false},"html":"<h2>problem</h2>\n<p>Given n non-negative integers <code class=\"language-text\">a1, a2, ..., an</code> , where each represents a point at coordinate <code class=\"language-text\">(i, ai)</code>. <code class=\"language-text\">n</code> vertical lines are drawn such that the two endpoints of the line i is at <code class=\"language-text\">(i, ai)</code> and <code class=\"language-text\">(i, 0)</code>. Find two lines, which, together with the x-axis forms a container, such that the container contains the most water.</p>\n<p><em>Notice</em> that you may not slant the container.</p>\n<h3>Example 1</h3>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 618px; \"\n    >\n      <a\n    class=\"gatsby-resp-image-link\"\n    href=\"/static/bb42a01c895a8410d087495ef9eeb8ae/e2d37/graph.png\"\n    style=\"display: block\"\n    target=\"_blank\"\n    rel=\"noopener\"\n  >\n    <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 46.28571428571429%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'185\\'%20viewBox=\\'0%200%20400%20185\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M270%20104v77h19c17%200%2018%200%204-1h-14V26h-9v78m-202%200v77h46l-19-1H77V27h-9v77m280-58l-1%2067v67h-29v-57h-9l-1%2029v29h49V45h-4l-5%201M115%2065l-1%2058v58h49v-39h-10v38h-29V64h-4l-5%201m77%2067v48h-14c-13%201-13%201%205%201h19V84h-10v48m39%209v39h-14c-13%201-13%201%205%201h19v-77l-5-1h-5v38M36%20171v10h9v-20h-9v10\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"graphical representation\"\n        title=\"graphical representation\"\n        src=\"/static/bb42a01c895a8410d087495ef9eeb8ae/e2d37/graph.png\"\n        srcset=\"/static/bb42a01c895a8410d087495ef9eeb8ae/1aaec/graph.png 175w,\n/static/bb42a01c895a8410d087495ef9eeb8ae/98287/graph.png 350w,\n/static/bb42a01c895a8410d087495ef9eeb8ae/e2d37/graph.png 618w\"\n        sizes=\"(max-width: 618px) 100vw, 618px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n  </a>\n    </span></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Input: height = [1,8,6,2,5,4,8,3,7]\nOutput: 49\nExplanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.</code></pre></div>\n<p>for more details about the problem <a href=\"https://leetcode.com/problems/container-with-most-water/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">click here</a></p>\n<h2>Solution using Brute Force</h2>\n<p>It might gives an error which is TLE(Time Limit Exceeded)</p>\n<ul>\n<li>Time complexity: O(n^2)</li>\n<li>Space complexity: O(1)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">maxArea</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">height</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> newArea <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newArea <span class=\"token operator\">></span> area<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        area <span class=\"token operator\">=</span> newArea<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> area<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">min</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">i<span class=\"token punctuation\">,</span> j</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> j<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Solution using Two pointer</h2>\n<ul>\n<li>Time complexity: O(n)</li>\n<li>Space complexity: O(1)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">maxArea</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">height</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> low <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> high <span class=\"token operator\">=</span> height<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> area <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">&lt;</span> high<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> currArea <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> height<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> height<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> height<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>high <span class=\"token operator\">-</span> low<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    area <span class=\"token operator\">=</span> area <span class=\"token operator\">&lt;</span> currArea <span class=\"token operator\">?</span> currArea <span class=\"token operator\">:</span> area<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">[</span>low<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> height<span class=\"token punctuation\">[</span>high<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">--</span>high<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">++</span>low<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> area<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>"}},{"node":{"frontmatter":{"title":"Connect netlify cms with hugo website","description":"Connect you hugo website to netlify cms","slug":"/connect-netlifycms-to-hugo","date":"2021-09-04T14:54:37.000Z","tags":["Hugo"],"draft":null},"html":"<p>In this article, We are gonna connect your hugo website to netlify cms. Prerequirements: <code class=\"language-text\">Netlify account, basic knowledge about hugo and netlify cms</code>.</p>\n<h2>What is netlify cms?</h2>\n<p>Netlify CMS is <strong>an open source content management system for your Git workflow</strong> that enables you to provide editors with a friendly UI and intuitive workflows.</p>\n<h2>What is hugo?</h2>\n<p><em>Hugo is a fast and modern static site generator written in Go.</em></p>\n<h2>Hugo project folder structure</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- archetypes\n- content\n- themes\n- static\n- config.yaml</code></pre></div>\n<h2>Connect netlify cms with your hugo site</h2>\n<ul>\n<li>\n<p>Create a folder named as <code class=\"language-text\">admin</code> inside static folder and create two files named as <code class=\"language-text\">config.yaml</code> and <code class=\"language-text\">index.html</code>.</p>\n</li>\n<li>\n<p>Paste the below code inside <code class=\"language-text\">config.yaml</code> file.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> git<span class=\"token punctuation\">-</span>gateway\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> main <span class=\"token comment\"># Branch to update (optional; defaults to master)</span>\n<span class=\"token key atrule\">media_folder</span><span class=\"token punctuation\">:</span> static/img\n<span class=\"token key atrule\">public_folder</span><span class=\"token punctuation\">:</span> /img\n<span class=\"token key atrule\">collections</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'blog'</span>\n    <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Blog'</span>\n    <span class=\"token key atrule\">folder</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'content/blog'</span>\n    <span class=\"token key atrule\">create</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">slug</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'{{year}}-{{month}}-{{day}}-{{slug}}'</span>\n    <span class=\"token key atrule\">editor</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">preview</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n    <span class=\"token key atrule\">fields</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Title'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">widget</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Publish Date'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'date'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">widget</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'datetime'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Description'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'description'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">widget</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'string'</span> <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Body'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'body'</span><span class=\"token punctuation\">,</span> <span class=\"token key atrule\">widget</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'markdown'</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Paste the below code inside <code class=\"language-text\">index.html</code> file.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Content Manager<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Include the script that enables Netlify Identity on this page. --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://identity.netlify.com/v1/netlify-identity-widget.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- Include the script that builds the page and powers Netlify CMS --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/netlify-cms@^2.0.0/dist/netlify-cms.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<ul>\n<li>Now, deploy your site in netlify and enable netlify identity in your site settings.</li>\n</ul>\n<h4>References</h4>\n<ul>\n<li><a href=\"https://www.netlifycms.org/docs/hugo\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official docs</a></li>\n</ul>\n<h4>Keywards</h4>\n<ul>\n<li>Hugo with netlify cms</li>\n<li>Connect your hugo site with netlify cms</li>\n<li>Netlify cms and hugo</li>\n</ul>"}},{"node":{"frontmatter":{"title":"AWS amplify filter data ","description":"Aws amplify filter data from database","slug":"/amplify-admin-filter-data","date":"2021-08-29T02:14:29.916Z","tags":["aws"],"draft":null},"html":"<p>In this article, we are going to discuss about the frontend react queries to fetch the data from database using amplify and graphql.</p>\n<ul>\n<li>create graphql api to interact with database. Follow this <a href=\"https://docs.amplify.aws/start/getting-started/data-model/q/integration/react/#create-a-graphql-api-and-database\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">official docs</a></li>\n</ul>\n<h3>Filter by equal data</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">graphqlOperation</span><span class=\"token punctuation\">(</span>\n    queries<span class=\"token punctuation\">.</span><span class=\"token function\">listTodos</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        field<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          eq<span class=\"token operator\">:</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Filter by or and equal data</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token constant\">API</span><span class=\"token punctuation\">.</span><span class=\"token function\">graphql</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">graphqlOperation</span><span class=\"token punctuation\">(</span>\n    queries<span class=\"token punctuation\">.</span><span class=\"token function\">listTodos</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span>filter<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        or<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span>\n            id<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> eq<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span>\n            id<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> eq<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Keywords</h4>\n<ul>\n<li>aws amlpify frontend qurey to filter data</li>\n<li>Filter data by specific value in aws amplify.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"AWS amplify admin queries CreateUser","description":"Here, We are explained about aws amplify AdminCreateUser and how to implement cognito admin create user in react.","slug":"/amplify-admin-queries-create-user","date":"2021-08-13T09:55:33.668Z","tags":["AWS","Amplify"],"draft":false},"html":"<p>Amplify does not generate <code class=\"language-text\">AdminCreateUser</code> by default. If you want enable AdminCreateUser query, You should do the following steps.</p>\n<ul>\n<li>Create adminQueries API using amplify. <a href=\"https://docs.amplify.aws/cli/auth/admin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Follow this docs</a></li>\n<li>After successful creation, You can find a folder <code class=\"language-text\">amplify\\backend\\function\\AdminQueriesxxxx\\src</code>. We are going to edit some files inside src folder.</li>\n<li>Create a function called CreateUser inside your cognitoActions.js and don't forget to export that function. <em>Note: Don't delete other functions</em></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">CreateUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> email</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    UserPoolId<span class=\"token operator\">:</span> userPoolId <span class=\"token comment\">/* required */</span><span class=\"token punctuation\">,</span>\n    Username<span class=\"token operator\">:</span> username <span class=\"token comment\">/* required */</span><span class=\"token punctuation\">,</span>\n\n    DesiredDeliveryMediums<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'EMAIL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// (optional) ForceAliasCreation: true || false,</span>\n    MessageAction<span class=\"token operator\">:</span> <span class=\"token string\">'SUPPRESS'</span><span class=\"token punctuation\">,</span>\n    TemporaryPassword<span class=\"token operator\">:</span> password<span class=\"token punctuation\">,</span>\n    UserAttributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        Name<span class=\"token operator\">:</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span>\n        Value<span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Attempting to create user </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> cognitoIdentityServiceProvider<span class=\"token punctuation\">.</span><span class=\"token function\">adminCreateUser</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> successfully created</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// successful response</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> successfully created</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  CreateUser<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// other functions</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Create an API url in <code class=\"language-text\">app.js</code> and import the createuser function from <code class=\"language-text\">cognitoActions.js</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  CreateUser<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">//other functions</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./cognitoActions'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/createUser'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">CreateUser</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Add this <em>\"cognito-idp:AdminCreateUser\"</em> in <em>Resources.lambdaexecutionpolicy.Properties.PolicyDocument.Statement[1].Action</em>. The file you should edit,<code class=\"language-text\">amplify\\backend\\function\\AdminQueriesc360a2c4\\AdminQueriesxxx-cloudformation-template.json</code></li>\n</ul>\n<h3>Reference and contact</h3>\n<p>In this article, I am also explained these contents. But, the difference is \"We are added the json responce\". Catch me on <a href=\"https://twitter.com/gurusabarishh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter</a></p>\n<ul>\n<li><a href=\"https://github.com/aws-amplify/amplify-cli/issues/4351\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github issue</a></li>\n<li><a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html#adminCreateUser-property\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS documentation</a></li>\n</ul>"}},{"node":{"frontmatter":{"title":"Host your hugo website using Github pages and Github action","description":"Host your hugo website using Github pages and Github action.","slug":"/host-your-hugo-website","date":"2021-08-03T07:55:14.637Z","tags":["Hugo"],"draft":false},"html":"<ul>\n<li>Create Github account <a href=\"https://github.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. Then, Create your Hugo website.</li>\n<li>Create a github repo named as your username.github.io and push your whole code to this repo.</li>\n</ul>\n<h2>Build your website using github action</h2>\n<p><strong>Create an action in github from the action tab and paste this code in your action file.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build your hugo website\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">workflow_dispatch</span><span class=\"token punctuation\">:</span>\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># The type of runner that the job will run on</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token comment\"># Steps represent a sequence of tasks that will be executed as part of the job</span>\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">submodules</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n          <span class=\"token key atrule\">fetch-depth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Hugo\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>hugo@v2\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">hugo-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'0.79.0'</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> hugo\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to live website\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">personal_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./public\n          <span class=\"token comment\">#external_repository:  gurusabarish/hugo-profile-demo</span>\n          <span class=\"token key atrule\">publish_branch</span><span class=\"token punctuation\">:</span> demo\n          <span class=\"token key atrule\">user_name</span><span class=\"token punctuation\">:</span> Github Actions deployment bot\n          <span class=\"token key atrule\">user_email</span><span class=\"token punctuation\">:</span> githubactionsbot@users.noreply.github.com</code></pre></div>\n<p>It will generate all static files of your website and create a branch called demo branch, push the file inside demo branch for each time whenever you update your repo.</p>\n<h2>Connecting your demo branch with github pages</h2>\n<ul>\n<li>Go to your settings tab of the repo. There, you can find the pages tab.</li>\n<li>Go to pages tab and enable github pages and select the source from demo branch.</li>\n</ul>\n<p><em>Now, your site is live at 'username.github.io'.</em></p>"}},{"node":{"frontmatter":{"title":"GOLANG get parameters from aws APIGateway using aws lambda functions","description":"GOLANG get parameters from aws APIGateway using aws lambda functions","slug":"/golang-get-parameters-from-aws-APIGateway-using-aws-lambda-functions","date":"2021-06-05T23:21:42.272Z","tags":["AWS"],"draft":false},"html":"<blockquote>\n<p>Before, move to titorial please, setup your aws lambda and aws APIDateway. Let's start,</p>\n</blockquote>\n<ul>\n<li>Create main.go file and paste the below code.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"encoding/json\"</span>\n\t<span class=\"token string\">\"errors\"</span>\n\t<span class=\"token string\">\"log\"</span>\n\n\t<span class=\"token string\">\"github.com/aws/aws-lambda-go/events\"</span>\n\t<span class=\"token string\">\"github.com/aws/aws-lambda-go/lambda\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">type</span> MyResponse <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"name:\"`</span>\n\tFirstname <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"firstname:\"`</span>\n\tLastname <span class=\"token builtin\">string</span> <span class=\"token string\">`json:\"lastname:\"`</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">HandleRequest</span><span class=\"token punctuation\">(</span>request events<span class=\"token punctuation\">.</span>APIGatewayProxyRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>events<span class=\"token punctuation\">.</span>APIGatewayProxyResponse<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> request<span class=\"token punctuation\">.</span>HTTPMethod <span class=\"token operator\">==</span> <span class=\"token string\">\"GET\"</span> <span class=\"token punctuation\">{</span>\n\t\tfirstname <span class=\"token operator\">:=</span> request<span class=\"token punctuation\">.</span>QueryStringParameters<span class=\"token punctuation\">[</span><span class=\"token string\">\"firstname\"</span><span class=\"token punctuation\">]</span>\n\t\tlastname <span class=\"token operator\">:=</span> request<span class=\"token punctuation\">.</span>QueryStringParameters<span class=\"token punctuation\">[</span><span class=\"token string\">\"lastname\"</span><span class=\"token punctuation\">]</span>\n\t\tName <span class=\"token operator\">:=</span> firstname <span class=\"token operator\">+</span> lastname\n\n\t\tResponse <span class=\"token operator\">:=</span> MyResponse<span class=\"token punctuation\">{</span>Name<span class=\"token punctuation\">,</span> firstname<span class=\"token punctuation\">,</span> lastname<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">var</span> jsonData <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span>\n\t\tjsonData<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>Response<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tApiResponse <span class=\"token operator\">:=</span> events<span class=\"token punctuation\">.</span>APIGatewayProxyResponse<span class=\"token punctuation\">{</span>Body<span class=\"token punctuation\">:</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>jsonData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> StatusCode<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> ApiResponse<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\terr <span class=\"token operator\">:=</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Method not allowed\"</span><span class=\"token punctuation\">)</span>\n\t\tApiResponse <span class=\"token operator\">:=</span> events<span class=\"token punctuation\">.</span>APIGatewayProxyResponse<span class=\"token punctuation\">{</span>Body<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Method Not OK\"</span><span class=\"token punctuation\">,</span> StatusCode<span class=\"token punctuation\">:</span> <span class=\"token number\">502</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> ApiResponse<span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tlambda<span class=\"token punctuation\">.</span><span class=\"token function\">Start</span><span class=\"token punctuation\">(</span>HandleRequest<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Go mod initialize and get required libraries.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">go mod init main\ngo get github.com/aws/aws-lambda-go/lambda\ngo get github.com/aws/aws-lambda-go/events</code></pre></div>\n<ul>\n<li>Build and zip main file for upload to aws lambda. Here, I mentioned the code for windows.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">go build -o main main.go\ntar.exe -a -c -f main.zip main</code></pre></div>"}},{"node":{"frontmatter":{"title":"Python Send mail to multiple accounts using smtplib","description":"Python program to send mails using smtplib. Here, we gonna learn to send mail to multiple and single accoount.","slug":"/python-send-mail","date":"2021-05-16T10:29:41.931Z","tags":["Python"],"draft":false},"html":"<blockquote>\n<p>You need to enable lesssecureapps in <a href=\"https://myaccount.google.com/lesssecureapps\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">your gmail account </a> to send mails using smtplib.</p>\n</blockquote>\n<h2>Python code to send mail to multiple accounts</h2>\n<p>Python program to send mail more then one account. We can use python's smtplib build-in library to send mails.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> smtplib\n<span class=\"token keyword\">from</span> email<span class=\"token punctuation\">.</span>mime<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">import</span> MIMEText\n\nrecipients <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token string\">\"example@example.com\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token string\">\"example1@example.com\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token string\">\"example2@example.com\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\ns <span class=\"token operator\">=</span> smtplib<span class=\"token punctuation\">.</span>SMTP<span class=\"token punctuation\">(</span><span class=\"token string\">\"smtp.gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">587</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>starttls<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">(</span><span class=\"token string\">\"yourmail@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\nmsg <span class=\"token operator\">=</span> MIMEText<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"your body text\"\"\"</span><span class=\"token punctuation\">)</span>\nsender <span class=\"token operator\">=</span> <span class=\"token string\">\"yourmail@gmail.com\"</span>\nmsg<span class=\"token punctuation\">[</span><span class=\"token string\">\"Subject\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Mail subject\"</span>\nmsg<span class=\"token punctuation\">[</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sender\nmsg<span class=\"token punctuation\">[</span><span class=\"token string\">\"To\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\" .\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>recipients<span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>sendmail<span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> recipients<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>as_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Python program to send mail</h2>\n<p>This code will send a mail to only one account.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> smtplib\n<span class=\"token keyword\">from</span> email<span class=\"token punctuation\">.</span>mime<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">import</span> MIMEText\n\ns <span class=\"token operator\">=</span> smtplib<span class=\"token punctuation\">.</span>SMTP<span class=\"token punctuation\">(</span><span class=\"token string\">\"smtp.gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">587</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>starttls<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>login<span class=\"token punctuation\">(</span><span class=\"token string\">\"yourmail@gmail.com\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">)</span>\nmsg <span class=\"token operator\">=</span> MIMEText<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">\"\"\"your body text\"\"\"</span><span class=\"token punctuation\">)</span>\nsender <span class=\"token operator\">=</span> <span class=\"token string\">\"yourmail@gmail.com\"</span>\nmsg<span class=\"token punctuation\">[</span><span class=\"token string\">\"Subject\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Mail subject\"</span>\nmsg<span class=\"token punctuation\">[</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sender\nmsg<span class=\"token punctuation\">[</span><span class=\"token string\">\"To\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"receiver@example.com\"</span>\ns<span class=\"token punctuation\">.</span>sendmail<span class=\"token punctuation\">(</span>sender<span class=\"token punctuation\">,</span> <span class=\"token string\">\"receiver@example.com\"</span><span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">.</span>as_string<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ns<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>"}},{"node":{"frontmatter":{"title":"Python's Pytube Library to Download YouTube Videos","description":null,"slug":"/python-pytube-library-to-download-youtube-videos","date":"2021-02-05T00:00:00.000Z","tags":["Python"],"draft":false},"html":"<p>YouTube is a social platform for video sharing. We may spent 2 to 4 hours in YouTube and want to download some videos But YouTube doesn't allow to download any video. <em>In this article, We learn to download the YouTube videos in Python using Pytube library.</em></p>\n<h1>Pytube | the Python Library</h1>\n<ul>\n<li>Pytube is a Python library to download YouTube videos.</li>\n<li>Pytube is a lightweight library written in Python. It has no third party dependencies and aims to be highly reliable.</li>\n</ul>\n<h1>Install the Pytube library before write the python program to download YouTube videos</h1>\n<ul>\n<li>Download the pytube library\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">pip <span class=\"token function\">install</span> pytube</code></pre></div>\n</li>\n</ul>\n<h1>Download the single youtube video in Python</h1>\n<p>We should use the Pytube's YouTube feature or function whenever we want to download the YouTube video.</p>\n<ul>\n<li>Firsly, we are import our pytube library.</li>\n<li>We set the url of the YouTube video to download.</li>\n<li>We prepare the video to download with the quality. If you want to download the video in highest quality, then replace the line with <code class=\"language-text\">video = youtube.streams.get_highest_resolution()</code>.</li>\n<li>Download function is used to download the video in given path.</li>\n</ul>\n<p>Note: <em>If it doesn't work then, uninstall the pytube library and reinstall. It works for me and my friends.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\n<span class=\"token keyword\">import</span> pytube\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.youtube.com/watch?v=ID8MoC34SFA'</span>\n\nyoutube <span class=\"token operator\">=</span> pytube<span class=\"token punctuation\">.</span>YouTube<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\nvideo <span class=\"token operator\">=</span> youtube<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nvideo<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token string\">'../path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Completed'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h1>Download multiple youtube videos in Python</h1>\n<p>Here, the only different is \"we are getting the youtube videos link in list format and processed with the for loop. <em>If it doesn't work then, uninstall the pytube library and reinstall. It works for me and my friends.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\n<span class=\"token keyword\">import</span> pytube\n\nlink<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>\n  <span class=\"token string\">\"https://www.youtube.com/watch?v=ID8MoC34SFA\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"https://www.youtube.com/watch?v=VzuBJTtwm3o\"</span>\n    <span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> link<span class=\"token punctuation\">:</span>\n  yt <span class=\"token operator\">=</span> pytube<span class=\"token punctuation\">.</span>YouTube<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  video <span class=\"token operator\">=</span> youtube<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  video<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token string\">'../Video'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Completed'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h1>Download youtube playlist in python</h1>\n<p>Here, we are using the Playlist feature or function to download the youtube playlist in python. <em>If it doesn't work then, uninstall the pytube library and reinstall. It works for me and my friends.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> pytube <span class=\"token keyword\">import</span> Playlist\npl <span class=\"token operator\">=</span> Playlist<span class=\"token punctuation\">(</span><span class=\"token string\">\"https://www.youtube.com/watch?v=-otyb0ngsa4&amp;list=PL0lo9MOBetEFCNnxB1uZcDGcrPO1Jbpz8\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> video <span class=\"token keyword\">in</span> pl<span class=\"token punctuation\">.</span>videos<span class=\"token punctuation\">:</span>\n  video<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">.</span>first<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h1>Download the youtube video's audio in Python</h1>\n<p>It will the audio file in mp4 format. Don't worry this mp4 file also support for audio. <em>If it doesn't work then, uninstall the pytube library and reinstall. It works for me and my friends.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">\n<span class=\"token keyword\">import</span> pytube\n\nurl <span class=\"token operator\">=</span> <span class=\"token string\">'https://www.youtube.com/watch?v=VzuBJTtwm3o'</span>\n\nyoutube <span class=\"token operator\">=</span> pytube<span class=\"token punctuation\">.</span>YouTube<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\nvideo <span class=\"token operator\">=</span> youtube<span class=\"token punctuation\">.</span>streams<span class=\"token punctuation\">.</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>only_audio<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nvideo<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token string\">'./path'</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>You should use the ``get_highest_resolution()` after streams to get the highest resolution of the YouTube video.</p>"}},{"node":{"frontmatter":{"title":"Deploy your hugo website with Netlify, Github pages and Vercel","description":"Deploy your hugo website with Netlify, Github and Vercel step by step procedure.","slug":"/deploy-your-hugo-website-with-netlify-github-pages-and-vercel","date":"2021-01-19T00:00:00.000Z","tags":["Hugo"],"draft":false},"html":"<h1>Build your website with \"Hugo\" comment</h1>\n<p>Go to the terminal and type \"hugo\" and press enter to build website files with public folder. The public folder is used to deploy your hugo website. Now you should have a folder as the image.</p>\n<div classname=\"Image__Small\">\n  <span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \">\n      <a class=\"gatsby-resp-image-link\" href=\"/static/f5f7877747fa81d4e9d2b2df5a7aeab9/e1040/image-1.png\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 38.857142857142854%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'157\\'%20viewBox=\\'0%200%20400%20157\\'%20preserveAspectRatio=\\'none\\'/%3e'); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"hugo public folder\" title=\"hugo public folder\" src=\"/static/f5f7877747fa81d4e9d2b2df5a7aeab9/39600/image-1.png\" srcset=\"/static/f5f7877747fa81d4e9d2b2df5a7aeab9/1aaec/image-1.png 175w,\n/static/f5f7877747fa81d4e9d2b2df5a7aeab9/98287/image-1.png 350w,\n/static/f5f7877747fa81d4e9d2b2df5a7aeab9/39600/image-1.png 700w,\n/static/f5f7877747fa81d4e9d2b2df5a7aeab9/e1040/image-1.png 792w\" sizes=\"(max-width: 700px) 100vw, 700px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n  </a>\n    </span>\n</div>\n<p><em>Note: You should delete the public folder for each time before using hugo comment.</em></p>\n<h1>Deploy your hugo website with Netlify</h1>\n<p>You can easily deploy your website using Netlify. There are two ways to deploy in Netlify. Here,</p>\n<h4><strong>Manual deploy:</strong></h4>\n<ul>\n<li>In manual deploy, you should upload your website to netlify for each and every change. Lets see \"how to deploy?\", Now you have the public folder that has the all website files.</li>\n<li>Go to the <a href=\"https://netlify.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Netlify</a> switched to the site tap and drag and drop your public folder and Setup your <a href=\"https://docs.netlify.com/domains-https/custom-domains/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">custom domain</a> in netlify.</li>\n</ul>\n<div classname=\"Image__Small\">\n  <span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \">\n      <a class=\"gatsby-resp-image-link\" href=\"/static/aab66430590263bcc40b5ee0f36e50a0/c2341/image-2.png\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 48%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'193\\'%20viewBox=\\'0%200%20400%20193\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M14%204l1%202h131a10974%2010974%200%2000-99-2c-1-2-4-2-17-2H14v2m265%2021v19l-2-1h-3v45h3l2-1v18h-8v-8h-8v8H141a180124%20180124%200%2000139%200%201201%201201%200%2000-1-80M12%2011l1%208v5h19v-8H13v-4c0-2-1-2-1-1m58%2061l1%203%201%203c0%202%200%202%201%200l1-2%201%202v3l1-3-1-3h94a1026%201026%200%200049-2c2-2%201-3-1-3l22-1-72-1H70v4m18-2l1%202c0%202%201%202%2033%202h33v-5h-34c-19%200-34%200-33%201\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"netlify manual deploy\" title=\"netlify manual deploy\" src=\"/static/aab66430590263bcc40b5ee0f36e50a0/39600/image-2.png\" srcset=\"/static/aab66430590263bcc40b5ee0f36e50a0/1aaec/image-2.png 175w,\n/static/aab66430590263bcc40b5ee0f36e50a0/98287/image-2.png 350w,\n/static/aab66430590263bcc40b5ee0f36e50a0/39600/image-2.png 700w,\n/static/aab66430590263bcc40b5ee0f36e50a0/57cd1/image-2.png 1050w,\n/static/aab66430590263bcc40b5ee0f36e50a0/c2341/image-2.png 1241w\" sizes=\"(max-width: 700px) 100vw, 700px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n  </a>\n    </span>\n</div>\n<h4><strong>Deploy from github:</strong></h4>\n<ul>\n<li>You can also use the github as your source. To use this method, you should link your github account in netlify. After connecting, you can create a website from github using the <code class=\"language-text\">New site from git</code> button.\n<div classname=\"Image__Small\">\n<span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \">\n      <a class=\"gatsby-resp-image-link\" href=\"/static/24599793624a0f982a64d7642a02d19d/c40ef/image-3.png\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 8.571428571428571%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'33\\'%20viewBox=\\'0%200%20400%2033\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M0%2017v16h6V19L7%206h382v27h12V0H0v17m332-3v6l1%205h48V14l-24-1-25%201\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"netlify github deploy\" title=\"netlify github deploy\" src=\"/static/24599793624a0f982a64d7642a02d19d/39600/image-3.png\" srcset=\"/static/24599793624a0f982a64d7642a02d19d/1aaec/image-3.png 175w,\n/static/24599793624a0f982a64d7642a02d19d/98287/image-3.png 350w,\n/static/24599793624a0f982a64d7642a02d19d/39600/image-3.png 700w,\n/static/24599793624a0f982a64d7642a02d19d/57cd1/image-3.png 1050w,\n/static/24599793624a0f982a64d7642a02d19d/c40ef/image-3.png 1253w\" sizes=\"(max-width: 700px) 100vw, 700px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n  </a>\n    </span></div>\n</li>\n</ul>\n</div>\n- Your github repository should have the files same as the public folder. You can push the public folder files in github.\n- It will automatically update your website whenever your gihub source code is modify.\n<h2>Deploy your hugo website using Github Pages</h2>\n<p>Github allows to host your static website in github with free domain ( username.github.io ). If you want to deploy your hugo website using github pages, you should have a github account and should know to <a href=\"https://guides.github.com/features/pages/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">setup github pages</a>. In github, also two ways to deploy.</p>\n<h4><strong>username.github.io</strong> repository:</h4>\n<ul>\n<li>Create a repository as your username followed by github.io <em>(username.github.io)</em></li>\n<li>Push your public folder files to that github repo.</li>\n</ul>\n<div classname=\"Image__Small\">\n  <span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \">\n      <a class=\"gatsby-resp-image-link\" href=\"/static/891e1c2469e150c46db291836310dafa/d6ba7/image-4.png\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 36%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'143\\'%20viewBox=\\'0%200%20400%20143\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M53%2012v4l2-2c2-2%205-3%203-1v2h5l2%201v1c-2%201-2%201%200%201l3-1c0-1%201-2%202-1l2-1c1-1%201-2%202-1v1l1%201%202-1-1-2v-2H63c-1%202-1%202-1%200l-2-1c-1%201-2%200-3-1-2-2-4-1-4%203\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"username github pages settings\" title=\"username github pages\" src=\"/static/891e1c2469e150c46db291836310dafa/39600/image-4.png\" srcset=\"/static/891e1c2469e150c46db291836310dafa/1aaec/image-4.png 175w,\n/static/891e1c2469e150c46db291836310dafa/98287/image-4.png 350w,\n/static/891e1c2469e150c46db291836310dafa/39600/image-4.png 700w,\n/static/891e1c2469e150c46db291836310dafa/d6ba7/image-4.png 988w\" sizes=\"(max-width: 700px) 100vw, 700px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n  </a>\n    </span>\n</div>\n<ul>\n<li>In setting, enable the github pages.</li>\n<li>Now, you will get a website as your username.github.io</li>\n</ul>\n<h4><strong>Project repository</strong>:</h4>\n<p>This repo looks like <code class=\"language-text\">username/project</code>. You should add <a href=\"https://docs.github.com/en/free-pro-team@latest/github/working-with-github-pages/about-custom-domains-and-github-pages\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">custom domain</a> to your repo to create a website for this repository otherwise it will not work well. You can follow the same as above for further.</p>\n<h2>Deploy without using build(<em>hugo</em>) comment</h2>\n<p>In this method, you can deploy your hugo website without using \"hugo build\" comment. You should have github repository to suse this method. You don't need push the public folder to github instead, Push your hole hugo website folder to your github repo. Your repo looks like below image. Here you can use two hosting companies one is Netlify and another one is Vercel.</p>\n<div classname=\"Image__Small\">\n  <span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \">\n      <a class=\"gatsby-resp-image-link\" href=\"/static/1136af694d3f7b5befc0b8c034f00e39/6d283/image-5.png\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 43.42857142857143%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'174\\'%20viewBox=\\'0%200%20400%20174\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M348%2033v7l1%205h20c23%200%2023%200%2023-6%200-7%201-7-22-7l-22%201M58%2062h-9c-8%200-8%200-8%202%200%203%201%204%203%202l2-1%203-1h1c0%202%2016%202%2016%200h8c0-3-7-3-12-2h-4m-17%2080c0%203%200%203%2012%203l12-1%205%201c1%200%203-1%202-2%200-2-7-2-8%200%200%202-2%201-2-1%201-2-3-2-4%200h-1c-1-2-6-2-6%200h-1c0-2%200-2-2%200s-2%202-2%200c1-2%201-2-2-1h-2v-1l-1%202\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"netlify github deploy\" title=\"netlify github deploy\" src=\"/static/1136af694d3f7b5befc0b8c034f00e39/39600/image-5.png\" srcset=\"/static/1136af694d3f7b5befc0b8c034f00e39/1aaec/image-5.png 175w,\n/static/1136af694d3f7b5befc0b8c034f00e39/98287/image-5.png 350w,\n/static/1136af694d3f7b5befc0b8c034f00e39/39600/image-5.png 700w,\n/static/1136af694d3f7b5befc0b8c034f00e39/6d283/image-5.png 976w\" sizes=\"(max-width: 700px) 100vw, 700px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n  </a>\n    </span>\n</div>\n<h4><strong>Deploy your hugo website in Netlify without using hugo build comment</strong>:</h4>\n<ul>\n<li>Add a file in your hugo website folder called <code class=\"language-text\">netlify.toml</code> and push to your github repo that file contains the below content. For reference <a href=\"https://github.com/gurusabarish/hugo-profile\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this github repo</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[build]\npublish = &quot;public&quot;\ncommand = &quot;hugo --gc --minify&quot;\n\n[context.production.environment]\nHUGO_VERSION = &quot;0.76.5&quot;\nHUGO_ENV = &quot;production&quot;\nHUGO_ENABLEGITINFO = &quot;true&quot;\n\n[context.split1]\ncommand = &quot;hugo --gc --minify --enableGitInfo&quot;\n\n[context.split1.environment]\nHUGO_VERSION = &quot;0.76.5&quot;\nHUGO_ENV = &quot;production&quot;\n\n[context.deploy-preview]\ncommand = &quot;hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL&quot;\n\n[context.deploy-preview.environment]\nHUGO_VERSION = &quot;0.76.5&quot;\n\n[context.branch-deploy]\ncommand = &quot;hugo --gc --minify -b $DEPLOY_PRIME_URL&quot;\n\n[context.branch-deploy.environment]\nHUGO_VERSION = &quot;0.76.5&quot;\n\n[context.next.environment]\nHUGO_ENABLEGITINFO = &quot;true&quot;</code></pre></div>\n<ul>\n<li>Go to your netlify account and create a website from github using the <code class=\"language-text\">New site from git</code> button.</li>\n<li>It will automatically update your website whenever your gihub source code is modify.</li>\n</ul>\n<h4><strong>Deploy your hugo website in Vercel without using hugo build comment:</strong></h4>\n<ul>\n<li><em>You don't need to add any extra files to your github repo.</em> Cerate a <a href=\"https://vercel.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Vercel</a> account</li>\n<li>Click the import project button and continue with github</li>\n<li>Paste the github repo URL</li>\n<li>Select the framework as hugo and click the <code class=\"language-text\">deploy</code> button.</li>\n</ul>\n<div classname=\"Image__Small\">\n  <span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 700px; \">\n      <a class=\"gatsby-resp-image-link\" href=\"/static/e37b43bc649fe64b19af95d663a446ce/05bbd/image-6.png\" style=\"display: block\" target=\"_blank\" rel=\"noopener\">\n    <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 82.28571428571429%; position: relative; bottom: 0; left: 0; background-image: url('data:image/svg+xml,%3csvg%20xmlns=\\'http://www.w3.org/2000/svg\\'%20width=\\'400\\'%20height=\\'329\\'%20viewBox=\\'0%200%20400%20329\\'%20preserveAspectRatio=\\'none\\'%3e%3cpath%20d=\\'M42%2040l1%204%201-3%201-3%201%203%201%203%201-2%201-3c1-1%201%200%201%202s0%203%202%203l1%202%202%201%201-1%202-2%203-2h1c2%203%206%202%207-1%201-4-3-6-6-4-2%202-2%202-3%201-1-2-6-2-7%200h-1c-1-1-2-2-5-2h-5v4m50%200l1%204%201-2c0-4%202-4%202-1%201%203%205%204%207%201%201-1%201-1%201%202-1%204%202%204%203%200%200-3%200-3%201-2%201%202%206%203%206%201l-1-1h-3l2-1%204%202%203%201c3-1%204-3%201-3l-2-1%202-1c2%200%203-1%200-2h-3c-2%202-3%202-4%200-1-1-2-1-4%201h-2l-1-1-2%201h-2c-1-2-2-2-4-1h-2l-2-1c-2%200-2%201-2%204m-53%2082l-1%2011v11l1-11%201-10%20161-1%20161-1H200l-161%201m161%2021l-161%201h161a4945%204945%200%20000-1m122%20151c-2%203-1%2014%200%2015l21%201h20v-17l-21-1c-17%200-20%200-20%202\\'%20fill=\\'%2364ffda\\'%20fill-rule=\\'evenodd\\'/%3e%3c/svg%3e'); background-size: cover; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image\" alt=\"Vercel deploy hugo website\" title=\"Vercel deploy hugo website\" src=\"/static/e37b43bc649fe64b19af95d663a446ce/39600/image-6.png\" srcset=\"/static/e37b43bc649fe64b19af95d663a446ce/1aaec/image-6.png 175w,\n/static/e37b43bc649fe64b19af95d663a446ce/98287/image-6.png 350w,\n/static/e37b43bc649fe64b19af95d663a446ce/39600/image-6.png 700w,\n/static/e37b43bc649fe64b19af95d663a446ce/05bbd/image-6.png 709w\" sizes=\"(max-width: 700px) 100vw, 700px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n  </a>\n    </span>\n</div>"}},{"node":{"frontmatter":{"title":"Add Hugo pagination for blog or posts in hugo","description":"Hugo provides a internal pagination. Here, we are look into how to use that internal pagination to your hugo website.We also provide a example with coding part","slug":"/blog/hugo-pagination","date":"2021-01-19T00:00:00.000Z","tags":["Hugo"],"draft":false},"html":"<p>In this article, we are discuss about <strong>'''How to set hugo pagination in your website which is generated by Hugo?'''</strong>.</p>\n<h1>Introduction to Hugo</h1>\n<p>Hugo is a static site generator which helps to build a website easily and looks like a professional developer. Hugo is made with GOLANG and maintaining by <a href=\"https://github.com/orgs/gohugoio/people\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">hugo developers</a>. Hugo is the fastest genarators camparitively other static site generators.</p>\n<h3>Why hugo is so popular?</h3>\n<ul>\n<li>You get a strong security for website</li>\n<li>To get a high Performance website</li>\n<li>Ease of use even your are not a developer</li>\n<li>Too many website themes provided by Hugo to make a website instanly.</li>\n</ul>\n<h1>what is pagination?</h1>\n<p>Assume that \"you have a 50 blog posts and display this all posts in a single page\". <strong>What will be happen?</strong></p>\n<ul>\n<li>Your website gets slow down</li>\n<li>User may not view the all posts</li>\n<li>Website not looks like a professionial.</li>\n</ul>\n<p>So, we are decide to give a pagination for each 5(your wish) posts. Pagination will display the given number of blog posts. So, we can easily overcome the above problems using pagination.</p>\n<h1>Hugo's Internal Pagination</h1>\n<p><strong>Hugo provides a internal pagination. Here, we are look into \"how to use that internal pagination to your hugo website\"</strong>.</p>\n<p>Lets move into coding part. Ausume that your list page code looks like or something like this.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{{ range .Pages }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-decoration-none<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ .Permalink }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-xs font-weight-bold text-primary text-uppercase mb-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ .Title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n{{ end }}</code></pre></div>\n<p>If you want to add pagination, you should change the code as below and <strong>add Paginate count(Paginate: 5) in your config file.</strong> Paginate count decide \"How many blog posts should be present in a page\".</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{{ range .Paginator.Pages }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-decoration-none<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{ .Permalink }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card-body<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text-xs font-weight-bold text-primary text-uppercase mb-1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ .Title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n{{ end }} {{ template \"_internal/pagination.html\" . }}</code></pre></div>"}}]}},"pageContext":{}},"staticQueryHashes":["1994492073","3391063840","604461682","956832748"]}