{"componentChunkName":"component---src-templates-post-js","path":"/amplify-admin-queries-create-user","result":{"data":{"markdownRemark":{"html":"<p>Amplify does not generate <code class=\"language-text\">AdminCreateUser</code> by default. If you want enable AdminCreateUser query, You should do the following steps.</p>\n<ul>\n<li>Create adminQueries API using amplify. <a href=\"https://docs.amplify.aws/cli/auth/admin\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Follow this docs</a></li>\n<li>After successful creation, You can find a folder <code class=\"language-text\">amplify\\backend\\function\\AdminQueriesxxxx\\src</code>. We are going to edit some files inside src folder.</li>\n<li>Create a function called CreateUser inside your cognitoActions.js and don't forget to export that function. <em>Note: Don't delete other functions</em></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">CreateUser</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">username<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> email</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> params <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    UserPoolId<span class=\"token operator\">:</span> userPoolId <span class=\"token comment\">/* required */</span><span class=\"token punctuation\">,</span>\n    Username<span class=\"token operator\">:</span> username <span class=\"token comment\">/* required */</span><span class=\"token punctuation\">,</span>\n\n    DesiredDeliveryMediums<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'EMAIL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// (optional) ForceAliasCreation: true || false,</span>\n    MessageAction<span class=\"token operator\">:</span> <span class=\"token string\">'SUPPRESS'</span><span class=\"token punctuation\">,</span>\n    TemporaryPassword<span class=\"token operator\">:</span> password<span class=\"token punctuation\">,</span>\n    UserAttributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        Name<span class=\"token operator\">:</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span>\n        Value<span class=\"token operator\">:</span> email<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Attempting to create user </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> cognitoIdentityServiceProvider<span class=\"token punctuation\">.</span><span class=\"token function\">adminCreateUser</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> successfully created</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// successful response</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> successfully created</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  CreateUser<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// other functions</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Create an API url in <code class=\"language-text\">app.js</code> and import the createuser function from <code class=\"language-text\">cognitoActions.js</code>.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  CreateUser<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">//other functions</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./cognitoActions'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">post</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/createUser'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'username is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> err <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email is required'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    err<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">CreateUser</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>password<span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Add this <em>\"cognito-idp:AdminCreateUser\"</em> in <em>Resources.lambdaexecutionpolicy.Properties.PolicyDocument.Statement[1].Action</em>. The file you should edit,<code class=\"language-text\">amplify\\backend\\function\\AdminQueriesc360a2c4\\AdminQueriesxxx-cloudformation-template.json</code></li>\n</ul>\n<h3>Reference and contact</h3>\n<p>In this article, I am also explained these contents. But, the difference is \"We are added the json responce\". Catch me on <a href=\"https://twitter.com/gurusabarishh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Twitter</a></p>\n<ul>\n<li><a href=\"https://github.com/aws-amplify/amplify-cli/issues/4351\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github issue</a></li>\n<li><a href=\"https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/CognitoIdentityServiceProvider.html#adminCreateUser-property\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS documentation</a></li>\n</ul>","frontmatter":{"title":"AWS amplify admin queries CreateUser","description":"Here, We are explained about aws amplify AdminCreateUser and how to implement cognito admin create user in react.","date":"2021-08-13T09:55:33.668Z","slug":"/amplify-admin-queries-create-user","tags":["AWS","Amplify"]}}},"pageContext":{}},"staticQueryHashes":["1994492073","3391063840","604461682","956832748"]}