{"version":3,"sources":["webpack://sabarish/./src/pages/django/index.js"],"names":["StyledMainContainer","styled","theme","mixins","flexBetween","StyledGrid","resetList","StyledPost","boxShadow","location","django","data","allMarkdownRemark","edges","title","className","length","map","i","frontmatter","node","description","slug","date","formattedDate","Date","toLocaleDateString","key","Link","to"],"mappings":"6KASMA,EAAsBC,qBAAH,mEAAGA,CAAH,2TAgBnB,qBAAGC,MAAkBC,OAAOC,eAK5BC,EAAaJ,mBAAH,0DAAGA,CAAH,sNACZ,qBAAGC,MAAkBC,OAAOG,aAW1BC,EAAaN,mBAAH,0DAAGA,CAAH,4mCAmBV,qBAAGC,MAAkBC,OAAOK,aAC5B,qBAAGN,MAAkBC,OAAOC,eAiB5B,qBAAGF,MAAkBC,OAAOC,eA6HlC,UA5DmB,SAAC,GAAwB,IAAtBK,EAAqB,EAArBA,SACdC,EADmC,EAAXC,KACVC,kBAAkBC,MAEtC,OACE,gBAAC,KAAD,CAAQJ,SAAUA,GAChB,gBAAC,IAAD,CAAQK,MAAM,iBAEd,gBAACd,EAAD,KACE,8BACE,sBAAIe,UAAU,eAAd,UACA,qBAAGA,UAAU,YAAb,kCAGF,gBAACV,EAAD,KACGK,EAAOM,OAAS,GACfN,EAAOO,KAAI,WAAWC,GAAO,IACnBC,EADkB,EAAdC,KACJD,YACAL,EAAmCK,EAAnCL,MAAOO,EAA4BF,EAA5BE,YAAaC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KAC5BC,EAAgB,IAAIC,KAAKF,GAAMG,qBAErC,OACE,gBAACnB,EAAD,CAAYoB,IAAKT,GACf,uBAAKH,UAAU,eACb,8BACE,uBAAKA,UAAU,cACb,gBAAC,KAAD,OAEF,sBAAIA,UAAU,eACZ,gBAAC,EAAAa,KAAD,CAAMC,GAAIP,GAAOR,IAEnB,qBAAGC,UAAU,cAAcM,IAG7B,8BACE,wBAAMN,UAAU,cAAcS","file":"component---src-pages-django-index-js-7db6f58b8e5ed6d97feb.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\n// import kebabCase from 'lodash/kebabCase';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport styled from 'styled-components';\nimport { Layout } from '@components';\nimport { IconBookmark } from '@components/icons';\n\nconst StyledMainContainer = styled.main`\n  & > header {\n    margin-bottom: 100px;\n    text-align: center;\n\n    a {\n      &:hover,\n      &:focus {\n        cursor: url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='40' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>âš¡</text></svg>\")\n            20 0,\n          auto;\n      }\n    }\n  }\n\n  footer {\n    ${({ theme }) => theme.mixins.flexBetween};\n    width: 100%;\n    margin-top: 20px;\n  }\n`;\nconst StyledGrid = styled.ul`\n  ${({ theme }) => theme.mixins.resetList};\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  grid-gap: 15px;\n  margin-top: 50px;\n  position: relative;\n\n  @media (max-width: 1080px) {\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n  }\n`;\nconst StyledPost = styled.li`\n  transition: var(--transition);\n  cursor: default;\n\n  @media (prefers-reduced-motion: no-preference) {\n    &:hover,\n    &:focus-within {\n      .post__inner {\n        transform: translateY(-7px);\n      }\n    }\n  }\n\n  a {\n    position: relative;\n    z-index: 1;\n  }\n\n  .post__inner {\n    ${({ theme }) => theme.mixins.boxShadow};\n    ${({ theme }) => theme.mixins.flexBetween};\n    flex-direction: column;\n    align-items: flex-start;\n    position: relative;\n    height: 100%;\n    padding: 2rem 1.75rem;\n    border-radius: var(--border-radius);\n    transition: var(--transition);\n    background-color: var(--light-navy);\n\n    header,\n    a {\n      width: 100%;\n    }\n  }\n\n  .post__icon {\n    ${({ theme }) => theme.mixins.flexBetween};\n    color: var(--green);\n    margin-bottom: 30px;\n    margin-left: -5px;\n\n    svg {\n      width: 40px;\n      height: 40px;\n    }\n  }\n\n  .post__title {\n    margin: 0 0 10px;\n    color: var(--lightest-slate);\n    font-size: var(--fz-xxl);\n\n    a {\n      position: static;\n\n      &:before {\n        content: '';\n        display: block;\n        position: absolute;\n        z-index: 0;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n      }\n    }\n  }\n\n  .post__desc {\n    color: var(--light-slate);\n    font-size: 17px;\n  }\n\n  .post__date {\n    color: var(--light-slate);\n    font-family: var(--font-mono);\n    font-size: var(--fz-xxs);\n    text-transform: uppercase;\n  }\n\n  ul.post__tags {\n    display: flex;\n    align-items: flex-end;\n    flex-wrap: wrap;\n    padding: 0;\n    margin: 0;\n    list-style: none;\n\n    li {\n      color: var(--green);\n      font-family: var(--font-mono);\n      font-size: var(--fz-xxs);\n      line-height: 1.75;\n\n      &:not(:last-of-type) {\n        margin-right: 15px;\n      }\n    }\n  }\n`;\n\nconst djangoPage = ({ location, data }) => {\n  const django = data.allMarkdownRemark.edges;\n\n  return (\n    <Layout location={location}>\n      <Helmet title=\"Learn Django\" />\n\n      <StyledMainContainer>\n        <header>\n          <h1 className=\"big-heading\">Django</h1>\n          <p className=\"subtitle\">A collection of django series</p>\n        </header>\n\n        <StyledGrid>\n          {django.length > 0 &&\n            django.map(({ node }, i) => {\n              const { frontmatter } = node;\n              const { title, description, slug, date } = frontmatter;\n              const formattedDate = new Date(date).toLocaleDateString();\n\n              return (\n                <StyledPost key={i}>\n                  <div className=\"post__inner\">\n                    <header>\n                      <div className=\"post__icon\">\n                        <IconBookmark />\n                      </div>\n                      <h5 className=\"post__title\">\n                        <Link to={slug}>{title}</Link>\n                      </h5>\n                      <p className=\"post__desc\">{description}</p>\n                    </header>\n\n                    <footer>\n                      <span className=\"post__date\">{formattedDate}</span>\n                      {/* <ul className=\"post__tags\">\n                        {tags.map((tag, i) => (\n                          <li key={i}>\n                            <Link to={`/django/tags/${kebabCase(tag)}/`} className=\"inline-link\">\n                              #{tag}\n                            </Link>\n                          </li>\n                        ))}\n                      </ul> */}\n                    </footer>\n                  </div>\n                </StyledPost>\n              );\n            })}\n        </StyledGrid>\n      </StyledMainContainer>\n    </Layout>\n  );\n};\n\ndjangoPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default djangoPage;\n\nexport const pageQuery = graphql`\n  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/django/\" }, frontmatter: { draft: { ne: true } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            description\n            slug\n            date\n            tags\n            draft\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}